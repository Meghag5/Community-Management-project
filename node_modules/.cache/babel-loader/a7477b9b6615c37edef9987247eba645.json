{"ast":null,"code":"var _jsxFileName = \"/Users/meghagupta/Desktop/my-teams/src/chat/src/App.js\";\nimport { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // if we are not logged in then we are going to return the login form\n  if (!localStorage.getItem('username')) return /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 49\n  }, this);\n  /* height=\"100vh will cover full size of the laptop screen\"\n  userSecret is a password */\n\n  return /*#__PURE__*/_jsxDEV(ChatEngine, {\n    height: \"88vh\",\n    \"max-width\": \"88vh\",\n    projectID: \"cddf3fa0-3a85-4556-9226-ba46e1714bfd\",\n    userName: localStorage.getItem('username'),\n    userSecret: localStorage.getItem('password')\n    /* With the help of this we can render for entire chat feed */\n    ,\n    renderChatFeed: chatAppProps => /*#__PURE__*/_jsxDEV(ChatFeed, { ...chatAppProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }, this),\n    onNewMessage: () => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}; // infinite scroll, logout, more customizations...\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/meghagupta/Desktop/my-teams/src/chat/src/App.js"],"names":["ChatEngine","ChatFeed","LoginForm","App","localStorage","getItem","chatAppProps","Audio","play"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,MAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAL,EAAuC,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACvC;AACF;;AACE,sBACE,QAAC,UAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,iBAAU,MAFZ;AAGE,IAAA,SAAS,EAAC,sCAHZ;AAIE,IAAA,QAAQ,EAAED,YAAY,CAACC,OAAb,CAAqB,UAArB,CAJZ;AAKE,IAAA,UAAU,EAAED,YAAY,CAACC,OAAb,CAAqB,UAArB;AACZ;AANF;AAOE,IAAA,cAAc,EAAGC,YAAD,iBAAkB,QAAC,QAAD,OAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,YAPpC;AAQE,IAAA,YAAY,EAAE,MAAM,IAAIC,KAAJ,CAAU,uDAAV,EAAmEC,IAAnE;AARtB;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD,C,CAmBA;;;KAnBML,G;AAqBN,eAAeA,GAAf","sourcesContent":["import { ChatEngine } from 'react-chat-engine';\n\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\nimport './App.css';\n\nconst App = () => {\n  // if we are not logged in then we are going to return the login form\n  if (!localStorage.getItem('username')) return <LoginForm />;\n  /* height=\"100vh will cover full size of the laptop screen\"\n  userSecret is a password */\n  return (\n    <ChatEngine\n      height=\"88vh\"\n      max-width=\"88vh\"\n      projectID=\"cddf3fa0-3a85-4556-9226-ba46e1714bfd\"\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      /* With the help of this we can render for entire chat feed */\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n    />\n  );\n};\n\n// infinite scroll, logout, more customizations...\n\nexport default App;"]},"metadata":{},"sourceType":"module"}