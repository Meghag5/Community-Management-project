{"ast":null,"code":"import _slicedToArray from\"/Users/meghagupta/Desktop/my-teams/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// moment is used for months dates and years\nimport moment from\"moment\";import Header from\"./header\";import\"./styles.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Calendar(_ref){var value=_ref.value,onChange=_ref.onChange;// useState will help us to initialize inside value as default value\n// withe the help of seCalendar we can update the value\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),calendar=_useState2[0],setCalendar=_useState2[1];// we want every time we want the day change therefore we initialize array with value\nuseEffect(function(){setCalendar(buildCalendar(value));},[value]);function buildCalendar(date){//ceating a temporary array to push value of calendar\nvar a=[];/*\n    To know the value in calender we need to startDay and end day values\n    with help of clone we will get current date\n    startOf will give us the first day of the week\n    */var startDay=date.clone().startOf(\"month\").startOf(\"week\");/*\n    endOf will give us the last month last week and last day\n    */var endDay=date.clone().endOf(\"month\").endOf(\"week\");// we will use while loop to built those days and place it inside the while loop\nvar _date=startDay.clone().subtract(1,\"day\");/* our while loop is going to have a condition and \n    as long as that condition is true while loop will execute\n    when condition will become false we will exit the loop\n    as calendar is made up of matrix so we will push array size \n    */while(_date.isBefore(endDay,\"day\")){a.push(Array(7).fill(0).map(function(){return _date.add(1,\"day\").clone();}));}return a;}function isSelected(day){return value.isSame(day,\"day\");}function beforeToday(day){return moment(day).isBefore(new Date(),\"day\");}function isToday(day){return moment(new Date()).isSame(day,\"day\");}// if the particular day is selected then we will return the className mentioned else no className\nfunction dayStyles(day){if(beforeToday(day))return\"before\";if(isSelected(day))return\"selected\";if(isToday(day))return\"today\";return\"\";}/*\n  function currMonthName() {\n    // this will return string representation of month object\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    // this will return string representation of year object\n    return value.format(\"YYYY\");\n  }\n*/return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar\",children:[/*#__PURE__*/_jsx(Header,{value:value,onChange:onChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"day-names\",children:[\"s\",\"m\",\"t\",\"w\",\"t\",\"f\",\"s\"].map(function(d){return/*#__PURE__*/_jsx(\"div\",{className:\"week\",children:d});})}),calendar.map(function(week,wi){return/*#__PURE__*/_jsx(\"div\",{children:week.map(function(day,di){return/*#__PURE__*/_jsx(\"div\",{className:\"day\"/* In order to change value of our component which is storing the day */,onClick:function onClick(){if(day<moment(new Date()).startOf(\"day\"))return;onChange(day);},children:/*#__PURE__*/_jsx(\"div\",{className:dayStyles(day),children:day.format(\"D\").toString()})},di);})},wi);})]})]});}","map":{"version":3,"sources":["/Users/meghagupta/Desktop/my-teams/src/teamsCalendar/calendar_app/calendar/index.jsx"],"names":["React","useState","useEffect","moment","Header","Calendar","value","onChange","calendar","setCalendar","buildCalendar","date","a","startDay","clone","startOf","endDay","endOf","_date","subtract","isBefore","push","Array","fill","map","add","isSelected","day","isSame","beforeToday","Date","isToday","dayStyles","d","week","wi","di","format","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// moment is used for months dates and years\nimport moment from \"moment\";\nimport Header from \"./header\";\nimport \"./styles.css\";\n\nexport default function Calendar({ value, onChange }) {\n  // useState will help us to initialize inside value as default value\n  // withe the help of seCalendar we can update the value\n  const [calendar, setCalendar] = useState([]);\n\n  // we want every time we want the day change therefore we initialize array with value\n  useEffect(() => {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  function buildCalendar(date) {\n    //ceating a temporary array to push value of calendar\n    const a = [];\n\n    /*\n    To know the value in calender we need to startDay and end day values\n    with help of clone we will get current date\n    startOf will give us the first day of the week\n    */\n    const startDay = date.clone().startOf(\"month\").startOf(\"week\");\n    /*\n    endOf will give us the last month last week and last day\n    */\n    const endDay = date.clone().endOf(\"month\").endOf(\"week\");\n\n    // we will use while loop to built those days and place it inside the while loop\n    const _date = startDay.clone().subtract(1, \"day\");\n\n    /* our while loop is going to have a condition and \n    as long as that condition is true while loop will execute\n    when condition will become false we will exit the loop\n    as calendar is made up of matrix so we will push array size \n    */\n    while (_date.isBefore(endDay, \"day\")) {\n      a.push(\n        Array(7)\n          .fill(0)\n          .map(() => _date.add(1, \"day\").clone())\n      );\n    }\n    return a;\n  }\n\n  function isSelected(day) {\n    return value.isSame(day, \"day\");\n  }\n\n  function beforeToday(day) {\n    return moment(day).isBefore(new Date(), \"day\");\n  }\n\n  function isToday(day) {\n    return moment(new Date()).isSame(day, \"day\");\n  }\n\n  // if the particular day is selected then we will return the className mentioned else no className\n  function dayStyles(day) {\n    if (beforeToday(day)) return \"before\";\n    if (isSelected(day)) return \"selected\";\n    if (isToday(day)) return \"today\";\n    return \"\";\n  }\n  /*\n  function currMonthName() {\n    // this will return string representation of month object\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    // this will return string representation of year object\n    return value.format(\"YYYY\");\n  }\n*/\n  return (\n    <div className=\"calendar\">\n      <Header value={value} onChange={onChange} />\n\n      <div className=\"body\">\n        <div className=\"day-names\">\n          {/* This is array for printing day names of week */}\n          {[\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"].map((d) => (\n            <div className=\"week\">{d}</div>\n          ))}\n        </div>\n        {/* It will iterate through weeks of the month */}\n        {calendar.map((week, wi) => (\n          <div key={wi}>\n            {/* It will iterate through days of the weeks */}\n            {week.map((day, di) => (\n              <div\n                key={di}\n                className=\"day\"\n                /* In order to change value of our component which is storing the day */\n                onClick={() => {\n                  if (day < moment(new Date()).startOf(\"day\")) return;\n                  onChange(day);\n                }}\n              >\n                {/* dayStyles will help to fade the previous days and bold comming days */}\n                <div className={dayStyles(day)}>\n                  {day.format(\"D\").toString()}\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}