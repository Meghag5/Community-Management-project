{"ast":null,"code":"var _jsxFileName = \"/Users/meghagupta/Desktop/my-teams/src/teamsCalendar/calendar_app/calendar/header.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarHeader({\n  value,\n  onChange\n}) {\n  function currMonthName() {\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    return value.format(\"YYYY\");\n  } // help to modify currently selected month to reach to previous month\n\n\n  function prevMonth() {\n    return value.clone().subtract(1, \"month\");\n  } // help to modify currently selected month to reach to next month\n\n\n  function nextMonth() {\n    return value.clone().add(1, \"month\");\n  } // this will help us to not to go to month that is already gone\n\n\n  function thisMonth() {\n    return value.isSame(new Date(), \"month\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previous\",\n      onClick: () => !thisMonth() && onChange(prevMonth()),\n      children: !thisMonth() ? String.fromCharCode(171) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current\",\n      children: [currMonthName(), \" \", currYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      onClick: () => onChange(nextMonth()),\n      children: String.fromCharCode(187)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = CalendarHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarHeader\");","map":{"version":3,"sources":["/Users/meghagupta/Desktop/my-teams/src/teamsCalendar/calendar_app/calendar/header.jsx"],"names":["React","CalendarHeader","value","onChange","currMonthName","format","currYear","prevMonth","clone","subtract","nextMonth","add","thisMonth","isSame","Date","String","fromCharCode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA6C;AAC1D,WAASC,aAAT,GAAyB;AACvB,WAAOF,KAAK,CAACG,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,WAASC,QAAT,GAAoB;AAClB,WAAOJ,KAAK,CAACG,MAAN,CAAa,MAAb,CAAP;AACD,GAPyD,CAS1D;;;AACA,WAASE,SAAT,GAAqB;AACnB,WAAOL,KAAK,CAACM,KAAN,GAAcC,QAAd,CAAuB,CAAvB,EAA0B,OAA1B,CAAP;AACD,GAZyD,CAc1D;;;AACA,WAASC,SAAT,GAAqB;AACnB,WAAOR,KAAK,CAACM,KAAN,GAAcG,GAAd,CAAkB,CAAlB,EAAqB,OAArB,CAAP;AACD,GAjByD,CAmB1D;;;AACA,WAASC,SAAT,GAAqB;AACnB,WAAOV,KAAK,CAACW,MAAN,CAAa,IAAIC,IAAJ,EAAb,EAAyB,OAAzB,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,OAAO,EAAE,MAAM,CAACF,SAAS,EAAV,IAAgBT,QAAQ,CAACI,SAAS,EAAV,CAFzC;AAAA,gBAKG,CAACK,SAAS,EAAV,GAAeG,MAAM,CAACC,YAAP,CAAoB,GAApB,CAAf,GAA0C;AAL7C;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACGZ,aAAa,EADhB,OACqBE,QAAQ,EAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACO,SAAS,EAAV,CAA7C;AAAA,gBAEGK,MAAM,CAACC,YAAP,CAAoB,GAApB;AAFH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;KA1CuBf,c","sourcesContent":["import React from \"react\";\n\nexport default function CalendarHeader({ value, onChange }) {\n  function currMonthName() {\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    return value.format(\"YYYY\");\n  }\n\n  // help to modify currently selected month to reach to previous month\n  function prevMonth() {\n    return value.clone().subtract(1, \"month\");\n  }\n\n  // help to modify currently selected month to reach to next month\n  function nextMonth() {\n    return value.clone().add(1, \"month\");\n  }\n\n  // this will help us to not to go to month that is already gone\n  function thisMonth() {\n    return value.isSame(new Date(), \"month\");\n  }\n\n  return (\n    <div className=\"header\">\n      <div\n        className=\"previous\"\n        onClick={() => !thisMonth() && onChange(prevMonth())}\n      >\n        {/* This one is for double left arrow */}\n        {!thisMonth() ? String.fromCharCode(171) : null}\n      </div>\n      <div className=\"current\">\n        {currMonthName()} {currYear()}\n      </div>\n      <div className=\"next\" onClick={() => onChange(nextMonth())}>\n        {/* This one is for double right arrow */}\n        {String.fromCharCode(187)}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}